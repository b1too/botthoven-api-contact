generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ServiceStatus {
  enabled
  disabled
  archived
}

enum LeadStatus {
  new
  contacted
  qualified
  unqualified
  won
  lost
}

model Service {
  id            Int                    @id @default(autoincrement()) @db.UnsignedSmallInt
  code          String                 @unique @db.VarChar(32)
  slug          String                 @unique @db.VarChar(64)
  name          String                 @db.VarChar(120)
  description   String?                @db.VarChar(255)
  icon          String?                @db.VarChar(64)
  display_order Int                    @default(0) @db.UnsignedSmallInt
  status        ServiceStatus          @default(enabled)
  created_at    DateTime               @default(now())
  updated_at    DateTime?              @updatedAt

  translations  ServiceTranslation[]
  leadServices  LeadService[]

  @@map("services")
}

model ServiceTranslation {
  id          BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  service_id  Int     @db.UnsignedSmallInt
  locale      String  @db.VarChar(10)
  name        String  @db.VarChar(160)
  description String? @db.VarChar(300)
  created_at  DateTime @default(now())
  updated_at  DateTime? @updatedAt

  service Service @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([service_id, locale], map: "uq_service_locale")
  @@map("service_translations")
}

model Lead {
  id           BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  first_name   String   @db.VarChar(100)
  last_name    String   @db.VarChar(100)
  email        String   @db.VarChar(254)
  company      String?  @db.VarChar(180)
  message      String?
  source       String   @default("web-form") @db.VarChar(60)
  status       LeadStatus @default(new)
  ip           Bytes?
  user_agent   String?  @db.VarChar(255)
  utm_source   String?  @db.VarChar(80)
  utm_medium   String?  @db.VarChar(80)
  utm_campaign String?  @db.VarChar(120)
  created_at   DateTime @default(now())
  updated_at   DateTime? @updatedAt

  services LeadService[]

  @@index([email], map: "idx_leads_email")
  @@index([status], map: "idx_leads_status")
  @@index([created_at], map: "idx_leads_created")
  @@map("leads")
}

model LeadService {
  id         BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  lead_id    BigInt @db.UnsignedBigInt
  service_id Int    @db.UnsignedSmallInt
  created_at DateTime @default(now())

  lead    Lead    @relation(fields: [lead_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  service Service @relation(fields: [service_id], references: [id], onDelete: Restrict, onUpdate: Cascade)

  @@unique([lead_id, service_id], map: "uq_lead_service")
  @@map("lead_services")
}
